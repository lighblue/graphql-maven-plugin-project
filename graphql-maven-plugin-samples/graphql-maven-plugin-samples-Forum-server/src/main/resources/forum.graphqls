schema {
    query: QueryType
    mutation: MutationType
}

type QueryType {
    boards: [Board]
    topics(boardName: String!): [Topic]!
    findTopics(boardName: String!, keyword: [String!]): [Topic]
}

type MutationType {
	createBoard(name: String!, publiclyAvailable: Boolean): Board!
	createTopic(authorId: ID!, publiclyAvailable: Boolean, title: String!, content: String): Topic!
	createPost(authorId: ID!, publiclyAvailable: Boolean, title: String!, content: String!): Post!
}

enum MemberType {
    ADMIN
    MODERATOR
    STANDARD
}

type Member {
    id: ID!
    name: String!
    alias: String
    email: String!
    type: MemberType
}

type Board {
    id: ID!
    name: String!
    publiclyAvailable: Boolean
    topics(since: String): [Topic]!
}

type Topic {
    id: ID!
    date: String!
    author: Member!
    publiclyAvailable: Boolean
    nbPosts: Int
    title: String!
    content: String
    posts(since: String): [Post]!
}

type Post {
    id: ID!
    date: String!
    author: Member
    publiclyAvailable: Boolean
    title: String!
    content: String!
}


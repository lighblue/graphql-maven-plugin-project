<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.graphql-java-generator</groupId>
		<artifactId>graphql-maven-plugin-project</artifactId>
		<version>1.0.0-RC3-SNAPSHOT</version>
	</parent>

	<artifactId>graphql-maven-plugin-logic</artifactId>

	<name>graphql-maven-plugin-logic</name>


	<build>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- We'll read the sources from graphql-client, to add the sources to the generated code (thus: no external dependency 
					in the generated code) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>graphql-java-client-sources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>graphql-java-runtime</artifactId>
									<type>jar</type>
									<classifier>sources</classifier>
									<overWrite>true</overWrite>
									<destFileName>graphql-java-runtime-sources.jar</destFileName>
									<outputDirectory>${project.build.directory}/classes/</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- Internal dependencies -->
		<dependency>
			<groupId>com.graphql-java-generator</groupId>
			<artifactId>graphql-java-runtime</artifactId>
			<!-- scope>provided</scope -->
		</dependency>

		<!-- Dependencies for tests -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- This dependency is necessary for tests only. But, in order to check in eclipse that the generated code compiles, 
				we need to add it to the compilation classpath -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Other dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
		</dependency>

		<!-- dependendencies for graphql -->
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java</artifactId>
		</dependency>

		<!-- dependendencies for json -->
		<dependency>
			<groupId>org.leadpony.justify</groupId>
			<artifactId>justify</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.johnzon</groupId>
			<artifactId>johnzon-core</artifactId>
		</dependency>
	</dependencies>

</project>